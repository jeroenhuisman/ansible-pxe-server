---
# tasks file for tftp-server
- name: Ensure tftp boot directories exists
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop:
    - /var/lib/tftpboot/uefi
    - /var/lib/tftpboot/pxelinux
 
- name: Create temp directory for extracting boot files
  file: 
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop:
    - /tmp/pxeboot
    - /tmp/uefiboot

- name: Find rpms for pxeboot
  find:
    paths: /var/www/html/repos
    patterns:
      - "shim-x64*.rpm"
      - "grub2-efi-x64*.rpm"
    recurse: yes
    excludes:
      - "*cdboot*"
      - "*modukes*"
  register: rpms_to_extract

- name: Ensure temp location for extraction exists
  file:
    dest: /tmp/pxeboot
    state: directory
    owner: root
    group: root
    mode: 0775
  when: rpms_to_extract is defined

- name: Extract grub and shim rpms
  shell: "rpm2cpio {{ item.path }} | cpio -dimv"
  args:
    chdir: /tmp/pxeboot
  loop: "{{ rpms_to_extract.files }}"

- name: ensure permissions are correct and tftp folders exist
  file:
    dest: "{{ item }}"
    state: directory
    recurse: true
    owner: root
    group: root
    mode: 0775
  loop:
    - "/var/lib/tftpboot/uefi/centos"
    - "/var/lib/tftpboot/uefi/redhat"
    - "/tmp/pxeboot"

- name: Find redhat EFI files
  find:
    path: /tmp/pxeboot/boot/efi/EFI/redhat
    patterns: "*.efi"
  register: redhat_efi_files

- name: Find centos EFI files
  find:
    path: /tmp/pxeboot/boot/efi/EFI/centos
    patterns: "*.efi"
  register: centos_efi_files

#- name: Copy redhat EFI files
#  copy:
#    src: "{{ item.path }}"
#    dest: /var/lib/tftpboot/uefi
#    mode: 0755
#    owner: root
#    group: root
#  loop: "{{ redhat_efi_files.files }}"
#  when: redhat_efi_files is defined

- name: Copy centos EFI files
  copy:
    src: "{{ item.path }}"
    dest: /var/lib/tftpboot/uefi
    owner: root
    group: root
    mode: 0755
  loop: "{{ centos_efi_files.files }}"
  when: centos_efi_files is defined

- name: Ensure directory for kernel and initrd.img exists
  file:
    path: "/var/lib/tftpboot/images/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - redhat
    - centos

- name: Find redhat vmlinuz and initrd.imge
  find:
    path: /var/www/html/install-repo/redhat/images/
    patterns:
      - "initrd.img"
      - "vmlinuz"
    recurse: yes
  register: "redhat_boot"

- name: Copy redhat_boot files
  copy:
    src: "{{ item.path }}"
    dest: /var/lib/tftpboot/images/redhat
    owner: root
    group: root
    mode: 0755
  loop: "{{ redhat_boot.files }}"
  when: redhat_boot is defined

- name: Find centos vmlinuz and initrd.imge
  find:
    path: /var/www/html/install-repo/centos/images/
    patterns:
      - "initrd.img"
      - "vmlinuz"
    recurse: yes
  register: "centos_boot"

- name: Copy centos_boot files
  copy:
    src: "{{ item.path }}"
    dest: /var/lib/tftpboot/images/centos
    owner: root
    group: root
    mode: 0755
  loop: "{{ centos_boot.files }}"
  when: centos_boot is defined


#- name: Copy kernel for centos and redhat
#  copy:
#    src: "/var/www/html/install-repo/{{ item }}/images/pxeboot/vmlinuz}"
#    dest: "/var/lib/tftpboot/images/{{ item }}"
#    owner: root
#    group: root
#    mode: 0755
#  loop:
#    - redhat
#    - centos

#- name: Copy initrd.img for centos and redhat
#  copy:
#    src: "/var/www/html/install-repo/{{ item }}/images/pxeboot/initrd.img}"
#    dest: "/var/lib/tftpboot/images/{{ item }}"
#    owner: root
#    group: root
#    mode: 0755
#  loop:
#   - redhat
#    - centos


- name: Render grub.cfg
  template:
    src: grub.cfg.j2
    dest: /var/lib/tftpboot/uefi/grub.cfg
